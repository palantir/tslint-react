
const goodSingleLine = <div className="my-class" tabIndex={-1}>{children}</div>;

const goodMultiline = (
    <div
        className="my-class"
        tabIndex={-1}
    >
        {children}
    </div>
);

const badMultiline = <div
                     ~~~~~
    className="my-class"
~~~~~~~~~~~~~~~~~~~~~~~~~
    tabIndex={-1}
~~~~~~~~~~~~~~~~~~
>
~~
    {children}
~~~~~~~~~~~~~~~
</div>;
~~~~~~   [Multiline JSX elements must be wrapped in parentheses]

const goodSelfClosingMultiline = (
    <div
        className="my-class"
        tabIndex={-1}
    />
);

const badSelfClosingMultiline = <div
                                ~~~~~
    className="my-class"
~~~~~~~~~~~~~~~~~~~~~~~~~
    tabIndex={-1}
~~~~~~~~~~~~~~~~~~
/>;
~~   [Multiline JSX elements must be wrapped in parentheses]

const badWrappedWithoutNewLines = (<div
                                  ~      [New line required after open parenthesis when wrapping multiline JSX elements]
    className="my-class"
>
    {children}
</div>);
      ~   [New line required before close parenthesis when wrapping multiline JSX elements]

const badWrappedWithoutNewLineAtOpen = (<div
                                       ~      [New line required after open parenthesis when wrapping multiline JSX elements]
    className="my-class"
>
    {children}
</div>
);

const badWrappedWithoutNewLineAtClose = (
    <div
        className="my-class"
    >
        {children}
    </div>);
          ~   [New line required before close parenthesis when wrapping multiline JSX elements]

const goodSingleLineWrappedWithoutNewLines = (<div className="my-class">{children}</div>);

const goodNestedElements = (
    <div>
        <div
            className="my-class"
        />
    </div>
);

const badNestedElements = <div>
                          ~~~~~~
    <div
~~~~~~~~~
        className="my-class"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    />
~~~~~~~
</div>;
~~~~~~  [Multiline JSX elements must be wrapped in parentheses]

const goodFunctionWrap = mount<ITestComponentProps, {}>(
    <TestComponent
        str1="My string"
    />
);

const goodMultilineWithFragments = (
    <>
        <div
            className="my-class"
            tabIndex={-1}
        >
            {children}
        </div>
    </>
);

const badMultilineWithFragments = <>
                                  ~~~
        <div
~~~~~~~~~~~~~
            className="my-class"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            tabIndex={-1}
~~~~~~~~~~~~~~~~~~~~~~~~~~
        >
~~~~~~~~~~
        {children}
~~~~~~~~~~~~~~~~~~~
    </div>
~~~~~~~~~~~
</>;
~~~   [Multiline JSX elements must be wrapped in parentheses]

shallowRender(
    <TestComponent2 />
);

shallowRender(
    <TestComponent3>
        <span />
    </TestComponent3>
);
