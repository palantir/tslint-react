fn()
[1, 2, 3].map(function () {})
<App />;
[<App key={0} />, <App key={1} />];
[1, 2, 3].map(function(x) { return <App key={x} /> });
[1, 2, 3].map(x => <App key={x} />);
[1, 2, 3].map(x => (<App key={x} />));
[1, 2, 3].map(x => (<App key={x}>app</App>));
[1, 2, 3].map(x => { return <App key={x} /> });
[1, 2, 3].map(x => { return (<App key={x} />) });
[1, 2, 3].foo(x => <App />);
var App = () => <div />;
[1, 2, 3].map(function(x) { return; });
foo(() => <div />)
[<App />];
[1, 2, 3].map((x, idx) => <App {...{x: x, key: idx}} />);
[1, 2, 3].map((x, key) => <App {...{x, key}} />);

[<App {...key} />];
 ~~~~~~~~~~~~~~~~    [0]

[<App key={0}/>, <App />];
                 ~~~~~~~    [0]

[1, 2, 3].map(function(x) { return <App /> });
                                   ~~~~~~~      [0]

[1, 2, 3].map(function(x) { return (<App />) });
                                    ~~~~~~~       [0]

[3, 4, 5].map(x => <App />);
                   ~~~~~~~    [0]

[3, 4, 5].map(x => (<App />));
                    ~~~~~~~     [0]

[3, 4, 5].map(x => (<App>app</App>));
                    ~~~~~~~~~~~~~~     [0]
                   
[6, 7, 8].map(x => { return <App /> });
                            ~~~~~~~      [0]

function nestedRender() {
    return (
        <div>
            {
                [9, 10, 3].map(function (num) {
                    return (
                        <div key={num}>
                            {
                                [1, 2, 3].map(index => {
                                    return <div />;
                                           ~~~~~~~   [0]
                                })
                            }
                        </div>
                    );
                })
            }
        </div>
    );
}
[0]: Missing "key" prop for element.
